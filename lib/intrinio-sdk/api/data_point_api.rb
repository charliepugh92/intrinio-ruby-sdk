=begin
#Intrinio API

#Welcome to the Intrinio API! Through our Marketplace, we offer a wide selection of financial data feeds sourced by our own proprietary processes as well as from many data vendors. The primary application of the Intrinio API is for use in third-party applications and integrations or for end-users utilizing the Excel add-in and Google Sheets add-on. The Intrinio API uses HTTPS verbs and a RESTful endpoint structure, which makes it easy to request data from Intrinio. Responses are delivered in JSON format. If you need additional help in using the API, go to our home page (https://intrinio.com) and click on the chat icon in the lower right corner.

OpenAPI spec version: 2.0.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require "uri"

module Intrinio
  class DataPointApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Get a Data Point (Number)
    # Returns a numeric value for the given `item` and the entity with the given `identifier`
    # @param identifier An identifier for an entity such as a Company, Security, Index, etc (Ticker, FIGI, ISIN, CUSIP, CIK, LEI, Intrinio ID)
    # @param item An Intrinio data tag or other item
    # @param [Hash] opts the optional parameters
    # @return [DataPointNumber]
    def get_data_point_number(identifier, item, opts = {})
      data, _status_code, _headers = get_data_point_number_with_http_info(identifier, item, opts)
      return data
    end

    # Get a Data Point (Number)
    # Returns a numeric value for the given &#x60;item&#x60; and the entity with the given &#x60;identifier&#x60;
    # @param identifier An identifier for an entity such as a Company, Security, Index, etc (Ticker, FIGI, ISIN, CUSIP, CIK, LEI, Intrinio ID)
    # @param item An Intrinio data tag or other item
    # @param [Hash] opts the optional parameters
    # @return [Array<(DataPointNumber, Fixnum, Hash)>] DataPointNumber data, response status code and response headers
    def get_data_point_number_with_http_info(identifier, item, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: DataPointApi.get_data_point_number ..."
      end
      # verify the required parameter 'identifier' is set
      if @api_client.config.client_side_validation && identifier.nil?
        fail ArgumentError, "Missing the required parameter 'identifier' when calling DataPointApi.get_data_point_number"
      end
      # verify the required parameter 'item' is set
      if @api_client.config.client_side_validation && item.nil?
        fail ArgumentError, "Missing the required parameter 'item' when calling DataPointApi.get_data_point_number"
      end
      # resource path
      local_var_path = "/data_point/{identifier}/{item}/number".sub('{' + 'identifier' + '}', identifier.to_s).sub('{' + 'item' + '}', item.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['HttpHeaderApiKey']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DataPointNumber')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DataPointApi#get_data_point_number\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get a Data Point (Text)
    # Returns a text value for the given `item` and the entity with the given `identifier`
    # @param identifier An identifier for an entity such as a Company, Security, Index, etc (Ticker, FIGI, ISIN, CUSIP, CIK, LEI, Intrinio ID)
    # @param item An Intrinio data tag or other item
    # @param [Hash] opts the optional parameters
    # @return [DataPointText]
    def get_data_point_text(identifier, item, opts = {})
      data, _status_code, _headers = get_data_point_text_with_http_info(identifier, item, opts)
      return data
    end

    # Get a Data Point (Text)
    # Returns a text value for the given &#x60;item&#x60; and the entity with the given &#x60;identifier&#x60;
    # @param identifier An identifier for an entity such as a Company, Security, Index, etc (Ticker, FIGI, ISIN, CUSIP, CIK, LEI, Intrinio ID)
    # @param item An Intrinio data tag or other item
    # @param [Hash] opts the optional parameters
    # @return [Array<(DataPointText, Fixnum, Hash)>] DataPointText data, response status code and response headers
    def get_data_point_text_with_http_info(identifier, item, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: DataPointApi.get_data_point_text ..."
      end
      # verify the required parameter 'identifier' is set
      if @api_client.config.client_side_validation && identifier.nil?
        fail ArgumentError, "Missing the required parameter 'identifier' when calling DataPointApi.get_data_point_text"
      end
      # verify the required parameter 'item' is set
      if @api_client.config.client_side_validation && item.nil?
        fail ArgumentError, "Missing the required parameter 'item' when calling DataPointApi.get_data_point_text"
      end
      # resource path
      local_var_path = "/data_point/{identifier}/{item}/text".sub('{' + 'identifier' + '}', identifier.to_s).sub('{' + 'item' + '}', item.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['HttpHeaderApiKey']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DataPointText')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DataPointApi#get_data_point_text\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
