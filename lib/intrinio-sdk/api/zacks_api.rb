=begin
#Intrinio API

#Welcome to the Intrinio API! Through our Financial Data Marketplace, we offer a wide selection of financial data feed APIs sourced by our own proprietary processes as well as from many data vendors. For a complete API request / response reference please view the [Intrinio API documentation](https://intrinio.com/documentation/api_v2). If you need additional help in using the API, please visit the [Intrinio website](https://intrinio.com) and click on the chat icon in the lower right corner.

OpenAPI spec version: 2.8.4

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require "uri"

module Intrinio
  class ZacksApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Zacks Analyst Ratings
    # Returns buy, sell, and hold recommendations from analysts at brokerages for all companies in the Zacks universe. Zack’s storied research team aggregates and validates the ratings from professional analysts.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
    # @option opts [String] :start_date Limit ratings to those on or after this date
    # @option opts [String] :end_date Limit ratings to those on or before this date
    # @option opts [Float] :mean_greater Return only records with a mean (average) higher than this value
    # @option opts [Float] :mean_less Return only records with a mean (average) lower than this value
    # @option opts [Integer] :strong_buys_greater Return only records with more than this many Strong Buy recommendations
    # @option opts [Integer] :strong_buys_less Return only records with fewer than this many Strong Buy recommendations
    # @option opts [Integer] :buys_greater Return only records with more than this many Buy recommendations
    # @option opts [Integer] :buys_less Return only records with fewer than this many Buy recommendations
    # @option opts [Integer] :holds_greater Return only records with more than this many Hold recommendations
    # @option opts [Integer] :holds_less Return only records with fewer than this many Hold recommendations
    # @option opts [Integer] :sells_greater Return only records with more than this many Sell recommendations
    # @option opts [Integer] :sells_less Return only records with fewer than this many Sell recommendations
    # @option opts [Integer] :strong_sells_greater Return only records with more than this many Strong Sell recommendations
    # @option opts [Integer] :strong_sells_less Return only records with fewer than this many Strong Sell recommendations
    # @option opts [Integer] :total_greater Return only records with more than this many recommendations, regardless of type
    # @option opts [Integer] :total_less Return only records with fewer than this many recommendations, regardless of type
    # @option opts [Integer] :page_size The number of results to return (default to 100)
    # @option opts [String] :next_page Gets the next page of data from a previous API call
    # @return [ApiResponseZacksAnalystRatings]
    def get_zacks_analyst_ratings(opts = {})
      data, _status_code, _headers = get_zacks_analyst_ratings_with_http_info(opts)
      return data
    end

    # Zacks Analyst Ratings
    # Returns buy, sell, and hold recommendations from analysts at brokerages for all companies in the Zacks universe. Zack’s storied research team aggregates and validates the ratings from professional analysts.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
    # @option opts [String] :start_date Limit ratings to those on or after this date
    # @option opts [String] :end_date Limit ratings to those on or before this date
    # @option opts [Float] :mean_greater Return only records with a mean (average) higher than this value
    # @option opts [Float] :mean_less Return only records with a mean (average) lower than this value
    # @option opts [Integer] :strong_buys_greater Return only records with more than this many Strong Buy recommendations
    # @option opts [Integer] :strong_buys_less Return only records with fewer than this many Strong Buy recommendations
    # @option opts [Integer] :buys_greater Return only records with more than this many Buy recommendations
    # @option opts [Integer] :buys_less Return only records with fewer than this many Buy recommendations
    # @option opts [Integer] :holds_greater Return only records with more than this many Hold recommendations
    # @option opts [Integer] :holds_less Return only records with fewer than this many Hold recommendations
    # @option opts [Integer] :sells_greater Return only records with more than this many Sell recommendations
    # @option opts [Integer] :sells_less Return only records with fewer than this many Sell recommendations
    # @option opts [Integer] :strong_sells_greater Return only records with more than this many Strong Sell recommendations
    # @option opts [Integer] :strong_sells_less Return only records with fewer than this many Strong Sell recommendations
    # @option opts [Integer] :total_greater Return only records with more than this many recommendations, regardless of type
    # @option opts [Integer] :total_less Return only records with fewer than this many recommendations, regardless of type
    # @option opts [Integer] :page_size The number of results to return
    # @option opts [String] :next_page Gets the next page of data from a previous API call
    # @return [Array<(ApiResponseZacksAnalystRatings, Fixnum, Hash)>] ApiResponseZacksAnalystRatings data, response status code and response headers
    def get_zacks_analyst_ratings_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ZacksApi.get_zacks_analyst_ratings ..."
      end
      if @api_client.config.client_side_validation && !opts[:'mean_greater'].nil? && opts[:'mean_greater'] > 5
        fail ArgumentError, 'invalid value for "opts[:"mean_greater"]" when calling ZacksApi.get_zacks_analyst_ratings, must be smaller than or equal to 5.'
      end

      if @api_client.config.client_side_validation && !opts[:'mean_greater'].nil? && opts[:'mean_greater'] < 1
        fail ArgumentError, 'invalid value for "opts[:"mean_greater"]" when calling ZacksApi.get_zacks_analyst_ratings, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'mean_less'].nil? && opts[:'mean_less'] > 5
        fail ArgumentError, 'invalid value for "opts[:"mean_less"]" when calling ZacksApi.get_zacks_analyst_ratings, must be smaller than or equal to 5.'
      end

      if @api_client.config.client_side_validation && !opts[:'mean_less'].nil? && opts[:'mean_less'] < 1
        fail ArgumentError, 'invalid value for "opts[:"mean_less"]" when calling ZacksApi.get_zacks_analyst_ratings, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'strong_buys_greater'].nil? && opts[:'strong_buys_greater'] < 0
        fail ArgumentError, 'invalid value for "opts[:"strong_buys_greater"]" when calling ZacksApi.get_zacks_analyst_ratings, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'strong_buys_less'].nil? && opts[:'strong_buys_less'] < 0
        fail ArgumentError, 'invalid value for "opts[:"strong_buys_less"]" when calling ZacksApi.get_zacks_analyst_ratings, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'buys_greater'].nil? && opts[:'buys_greater'] < 0
        fail ArgumentError, 'invalid value for "opts[:"buys_greater"]" when calling ZacksApi.get_zacks_analyst_ratings, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'buys_less'].nil? && opts[:'buys_less'] < 0
        fail ArgumentError, 'invalid value for "opts[:"buys_less"]" when calling ZacksApi.get_zacks_analyst_ratings, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'holds_greater'].nil? && opts[:'holds_greater'] < 0
        fail ArgumentError, 'invalid value for "opts[:"holds_greater"]" when calling ZacksApi.get_zacks_analyst_ratings, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'holds_less'].nil? && opts[:'holds_less'] < 0
        fail ArgumentError, 'invalid value for "opts[:"holds_less"]" when calling ZacksApi.get_zacks_analyst_ratings, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'sells_greater'].nil? && opts[:'sells_greater'] < 0
        fail ArgumentError, 'invalid value for "opts[:"sells_greater"]" when calling ZacksApi.get_zacks_analyst_ratings, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'sells_less'].nil? && opts[:'sells_less'] < 0
        fail ArgumentError, 'invalid value for "opts[:"sells_less"]" when calling ZacksApi.get_zacks_analyst_ratings, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'strong_sells_greater'].nil? && opts[:'strong_sells_greater'] < 0
        fail ArgumentError, 'invalid value for "opts[:"strong_sells_greater"]" when calling ZacksApi.get_zacks_analyst_ratings, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'strong_sells_less'].nil? && opts[:'strong_sells_less'] < 0
        fail ArgumentError, 'invalid value for "opts[:"strong_sells_less"]" when calling ZacksApi.get_zacks_analyst_ratings, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'total_greater'].nil? && opts[:'total_greater'] < 0
        fail ArgumentError, 'invalid value for "opts[:"total_greater"]" when calling ZacksApi.get_zacks_analyst_ratings, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'total_less'].nil? && opts[:'total_less'] < 0
        fail ArgumentError, 'invalid value for "opts[:"total_less"]" when calling ZacksApi.get_zacks_analyst_ratings, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 10000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling ZacksApi.get_zacks_analyst_ratings, must be smaller than or equal to 10000.'
      end

      # resource path
      local_var_path = "/zacks/analyst_ratings"

      # query parameters
      query_params = {}
      query_params[:'identifier'] = opts[:'identifier'] if !opts[:'identifier'].nil?
      query_params[:'start_date'] = opts[:'start_date'] if !opts[:'start_date'].nil?
      query_params[:'end_date'] = opts[:'end_date'] if !opts[:'end_date'].nil?
      query_params[:'mean_greater'] = opts[:'mean_greater'] if !opts[:'mean_greater'].nil?
      query_params[:'mean_less'] = opts[:'mean_less'] if !opts[:'mean_less'].nil?
      query_params[:'strong_buys_greater'] = opts[:'strong_buys_greater'] if !opts[:'strong_buys_greater'].nil?
      query_params[:'strong_buys_less'] = opts[:'strong_buys_less'] if !opts[:'strong_buys_less'].nil?
      query_params[:'buys_greater'] = opts[:'buys_greater'] if !opts[:'buys_greater'].nil?
      query_params[:'buys_less'] = opts[:'buys_less'] if !opts[:'buys_less'].nil?
      query_params[:'holds_greater'] = opts[:'holds_greater'] if !opts[:'holds_greater'].nil?
      query_params[:'holds_less'] = opts[:'holds_less'] if !opts[:'holds_less'].nil?
      query_params[:'sells_greater'] = opts[:'sells_greater'] if !opts[:'sells_greater'].nil?
      query_params[:'sells_less'] = opts[:'sells_less'] if !opts[:'sells_less'].nil?
      query_params[:'strong_sells_greater'] = opts[:'strong_sells_greater'] if !opts[:'strong_sells_greater'].nil?
      query_params[:'strong_sells_less'] = opts[:'strong_sells_less'] if !opts[:'strong_sells_less'].nil?
      query_params[:'total_greater'] = opts[:'total_greater'] if !opts[:'total_greater'].nil?
      query_params[:'total_less'] = opts[:'total_less'] if !opts[:'total_less'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'next_page'] = opts[:'next_page'] if !opts[:'next_page'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['ApiKeyAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ApiResponseZacksAnalystRatings')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ZacksApi#get_zacks_analyst_ratings\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Zacks EPS Surprises
    # Returns Zacks eps surprise data for all Securities.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :start_date Limit EPS surprises to those on or after this date
    # @option opts [String] :end_date Limit EPS surprises to those on or before this date
    # @option opts [Float] :eps_actual_greater Return only records with an actual EPS higher than this value
    # @option opts [Float] :eps_actual_less Return only records with an actual EPS lower than this value
    # @option opts [Float] :eps_mean_estimate_greater Return only records with an EPS mean estimate greater than this value
    # @option opts [Float] :eps_mean_estimate_less Return only records with an EPS mean estimate lower than this value
    # @option opts [Float] :eps_amount_diff_greater Return only records with an EPS amount difference greater than this value
    # @option opts [Float] :eps_amount_diff_less Return only records with an EPS amount difference less than this value
    # @option opts [Float] :eps_percent_diff_greater Return only records with an EPS percent difference greater than this value
    # @option opts [Float] :eps_percent_diff_less Return only records with an EPS percent difference less than this value
    # @option opts [Float] :eps_count_estimate_greater Return only records with an EPS count estimate greater than this value
    # @option opts [Float] :eps_count_estimate_less Return only records with an EPS count estimate less than this value
    # @option opts [Float] :eps_std_dev_estimate_greater Return only records with an EPS standard deviation greater than this value
    # @option opts [Float] :eps_std_dev_estimate_less Return only records with an EPS standard deviation less than this value
    # @option opts [Integer] :page_size The number of results to return (default to 100)
    # @option opts [String] :next_page Gets the next page of data from a previous API call
    # @return [ApiResponseZacksEPSSurprises]
    def get_zacks_eps_surprises(opts = {})
      data, _status_code, _headers = get_zacks_eps_surprises_with_http_info(opts)
      return data
    end

    # Zacks EPS Surprises
    # Returns Zacks eps surprise data for all Securities.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :start_date Limit EPS surprises to those on or after this date
    # @option opts [String] :end_date Limit EPS surprises to those on or before this date
    # @option opts [Float] :eps_actual_greater Return only records with an actual EPS higher than this value
    # @option opts [Float] :eps_actual_less Return only records with an actual EPS lower than this value
    # @option opts [Float] :eps_mean_estimate_greater Return only records with an EPS mean estimate greater than this value
    # @option opts [Float] :eps_mean_estimate_less Return only records with an EPS mean estimate lower than this value
    # @option opts [Float] :eps_amount_diff_greater Return only records with an EPS amount difference greater than this value
    # @option opts [Float] :eps_amount_diff_less Return only records with an EPS amount difference less than this value
    # @option opts [Float] :eps_percent_diff_greater Return only records with an EPS percent difference greater than this value
    # @option opts [Float] :eps_percent_diff_less Return only records with an EPS percent difference less than this value
    # @option opts [Float] :eps_count_estimate_greater Return only records with an EPS count estimate greater than this value
    # @option opts [Float] :eps_count_estimate_less Return only records with an EPS count estimate less than this value
    # @option opts [Float] :eps_std_dev_estimate_greater Return only records with an EPS standard deviation greater than this value
    # @option opts [Float] :eps_std_dev_estimate_less Return only records with an EPS standard deviation less than this value
    # @option opts [Integer] :page_size The number of results to return
    # @option opts [String] :next_page Gets the next page of data from a previous API call
    # @return [Array<(ApiResponseZacksEPSSurprises, Fixnum, Hash)>] ApiResponseZacksEPSSurprises data, response status code and response headers
    def get_zacks_eps_surprises_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ZacksApi.get_zacks_eps_surprises ..."
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 10000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling ZacksApi.get_zacks_eps_surprises, must be smaller than or equal to 10000.'
      end

      # resource path
      local_var_path = "/zacks/eps_surprises"

      # query parameters
      query_params = {}
      query_params[:'start_date'] = opts[:'start_date'] if !opts[:'start_date'].nil?
      query_params[:'end_date'] = opts[:'end_date'] if !opts[:'end_date'].nil?
      query_params[:'eps_actual_greater'] = opts[:'eps_actual_greater'] if !opts[:'eps_actual_greater'].nil?
      query_params[:'eps_actual_less'] = opts[:'eps_actual_less'] if !opts[:'eps_actual_less'].nil?
      query_params[:'eps_mean_estimate_greater'] = opts[:'eps_mean_estimate_greater'] if !opts[:'eps_mean_estimate_greater'].nil?
      query_params[:'eps_mean_estimate_less'] = opts[:'eps_mean_estimate_less'] if !opts[:'eps_mean_estimate_less'].nil?
      query_params[:'eps_amount_diff_greater'] = opts[:'eps_amount_diff_greater'] if !opts[:'eps_amount_diff_greater'].nil?
      query_params[:'eps_amount_diff_less'] = opts[:'eps_amount_diff_less'] if !opts[:'eps_amount_diff_less'].nil?
      query_params[:'eps_percent_diff_greater'] = opts[:'eps_percent_diff_greater'] if !opts[:'eps_percent_diff_greater'].nil?
      query_params[:'eps_percent_diff_less'] = opts[:'eps_percent_diff_less'] if !opts[:'eps_percent_diff_less'].nil?
      query_params[:'eps_count_estimate_greater'] = opts[:'eps_count_estimate_greater'] if !opts[:'eps_count_estimate_greater'].nil?
      query_params[:'eps_count_estimate_less'] = opts[:'eps_count_estimate_less'] if !opts[:'eps_count_estimate_less'].nil?
      query_params[:'eps_std_dev_estimate_greater'] = opts[:'eps_std_dev_estimate_greater'] if !opts[:'eps_std_dev_estimate_greater'].nil?
      query_params[:'eps_std_dev_estimate_less'] = opts[:'eps_std_dev_estimate_less'] if !opts[:'eps_std_dev_estimate_less'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'next_page'] = opts[:'next_page'] if !opts[:'next_page'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['ApiKeyAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ApiResponseZacksEPSSurprises')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ZacksApi#get_zacks_eps_surprises\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Zacks Sales Surprises
    # Returns Zacks sales surprise data for all Securities.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :start_date Limit sales surprises to those on or after this date
    # @option opts [String] :end_date Limit sales surprises to those on or before this date
    # @option opts [Float] :sales_actual_greater Return only records with an actual sales higher than this value
    # @option opts [Float] :sales_actual_less Return only records with an actual sales lower than this value
    # @option opts [Float] :sales_mean_estimate_greater Return only records with a sales mean estimate greater than this value
    # @option opts [Float] :sales_mean_estimate_less Return only records with a sales mean estimate lower than this value
    # @option opts [Float] :sales_amount_diff_greater Return only records with a sales amount difference greater than this value
    # @option opts [Float] :sales_amount_diff_less Return only records with a sales amount difference less than this value
    # @option opts [Float] :sales_percent_diff_greater Return only records with a sales percent difference greater than this value
    # @option opts [Float] :sales_percent_diff_less Return only records with a sales percent difference less than this value
    # @option opts [Float] :sales_count_estimate_greater Return only records with a sales count estimate greater than this value
    # @option opts [Float] :sales_count_estimate_less Return only records with a sales count estimate less than this value
    # @option opts [Float] :sales_std_dev_estimate_greater Return only records with a sales standard deviation greater than this value
    # @option opts [Float] :sales_std_dev_estimate_less Return only records with a sales standard deviation less than this value
    # @option opts [Integer] :page_size The number of results to return (default to 100)
    # @option opts [String] :next_page Gets the next page of data from a previous API call
    # @return [ApiResponseZacksSalesSurprises]
    def get_zacks_sales_surprises(opts = {})
      data, _status_code, _headers = get_zacks_sales_surprises_with_http_info(opts)
      return data
    end

    # Zacks Sales Surprises
    # Returns Zacks sales surprise data for all Securities.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :start_date Limit sales surprises to those on or after this date
    # @option opts [String] :end_date Limit sales surprises to those on or before this date
    # @option opts [Float] :sales_actual_greater Return only records with an actual sales higher than this value
    # @option opts [Float] :sales_actual_less Return only records with an actual sales lower than this value
    # @option opts [Float] :sales_mean_estimate_greater Return only records with a sales mean estimate greater than this value
    # @option opts [Float] :sales_mean_estimate_less Return only records with a sales mean estimate lower than this value
    # @option opts [Float] :sales_amount_diff_greater Return only records with a sales amount difference greater than this value
    # @option opts [Float] :sales_amount_diff_less Return only records with a sales amount difference less than this value
    # @option opts [Float] :sales_percent_diff_greater Return only records with a sales percent difference greater than this value
    # @option opts [Float] :sales_percent_diff_less Return only records with a sales percent difference less than this value
    # @option opts [Float] :sales_count_estimate_greater Return only records with a sales count estimate greater than this value
    # @option opts [Float] :sales_count_estimate_less Return only records with a sales count estimate less than this value
    # @option opts [Float] :sales_std_dev_estimate_greater Return only records with a sales standard deviation greater than this value
    # @option opts [Float] :sales_std_dev_estimate_less Return only records with a sales standard deviation less than this value
    # @option opts [Integer] :page_size The number of results to return
    # @option opts [String] :next_page Gets the next page of data from a previous API call
    # @return [Array<(ApiResponseZacksSalesSurprises, Fixnum, Hash)>] ApiResponseZacksSalesSurprises data, response status code and response headers
    def get_zacks_sales_surprises_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ZacksApi.get_zacks_sales_surprises ..."
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 10000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling ZacksApi.get_zacks_sales_surprises, must be smaller than or equal to 10000.'
      end

      # resource path
      local_var_path = "/zacks/sales_surprises"

      # query parameters
      query_params = {}
      query_params[:'start_date'] = opts[:'start_date'] if !opts[:'start_date'].nil?
      query_params[:'end_date'] = opts[:'end_date'] if !opts[:'end_date'].nil?
      query_params[:'sales_actual_greater'] = opts[:'sales_actual_greater'] if !opts[:'sales_actual_greater'].nil?
      query_params[:'sales_actual_less'] = opts[:'sales_actual_less'] if !opts[:'sales_actual_less'].nil?
      query_params[:'sales_mean_estimate_greater'] = opts[:'sales_mean_estimate_greater'] if !opts[:'sales_mean_estimate_greater'].nil?
      query_params[:'sales_mean_estimate_less'] = opts[:'sales_mean_estimate_less'] if !opts[:'sales_mean_estimate_less'].nil?
      query_params[:'sales_amount_diff_greater'] = opts[:'sales_amount_diff_greater'] if !opts[:'sales_amount_diff_greater'].nil?
      query_params[:'sales_amount_diff_less'] = opts[:'sales_amount_diff_less'] if !opts[:'sales_amount_diff_less'].nil?
      query_params[:'sales_percent_diff_greater'] = opts[:'sales_percent_diff_greater'] if !opts[:'sales_percent_diff_greater'].nil?
      query_params[:'sales_percent_diff_less'] = opts[:'sales_percent_diff_less'] if !opts[:'sales_percent_diff_less'].nil?
      query_params[:'sales_count_estimate_greater'] = opts[:'sales_count_estimate_greater'] if !opts[:'sales_count_estimate_greater'].nil?
      query_params[:'sales_count_estimate_less'] = opts[:'sales_count_estimate_less'] if !opts[:'sales_count_estimate_less'].nil?
      query_params[:'sales_std_dev_estimate_greater'] = opts[:'sales_std_dev_estimate_greater'] if !opts[:'sales_std_dev_estimate_greater'].nil?
      query_params[:'sales_std_dev_estimate_less'] = opts[:'sales_std_dev_estimate_less'] if !opts[:'sales_std_dev_estimate_less'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'next_page'] = opts[:'next_page'] if !opts[:'next_page'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['ApiKeyAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ApiResponseZacksSalesSurprises')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ZacksApi#get_zacks_sales_surprises\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
