=begin
#Intrinio API

#Welcome to the Intrinio API! Through our Financial Data Marketplace, we offer a wide selection of financial data feed APIs sourced by our own proprietary processes as well as from many data vendors. For a complete API request / response reference please view the [Intrinio API documentation](https://intrinio.com/documentation/api_v2). If you need additional help in using the API, please visit the [Intrinio website](https://intrinio.com) and click on the chat icon in the lower right corner.

OpenAPI spec version: 2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Intrinio::CompanyApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CompanyApi' do
  before do
    # run before each test
    @instance = Intrinio::CompanyApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CompanyApi' do
    it 'should create an instance of CompanyApi' do
      expect(@instance).to be_instance_of(Intrinio::CompanyApi)
    end
  end

  # unit tests for filter_companies
  # Filter Companies
  # Returns Companies matching the specified filters
  # @param [Hash] opts the optional parameters
  # @option opts [Date] :last_filing_date Last filing date
  # @option opts [String] :sic Standard Industrial Classification code
  # @option opts [String] :template Template
  # @option opts [String] :sector Industry sector
  # @option opts [String] :industry_category Industry category
  # @option opts [String] :industry_group Industry group
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCompanies]
  describe 'filter_companies test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for filter_company_fundamentals
  # Filter Fundamentals for a Company
  # Returns Fundamentals for the Company with the given &#x60;identifier&#x60; and matching the specified filters
  # @param identifier A Company identifier (Ticker, CIK, LEI, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Date] :filed_after Filed on or after this date
  # @option opts [Date] :filed_before Filed on or before this date
  # @option opts [BOOLEAN] :reported_only Only as-reported fundamentals
  # @option opts [Integer] :fiscal_year Only for the given fiscal year
  # @option opts [String] :statement_code Only of the given statement code
  # @option opts [String] :type Only of the given type
  # @option opts [Date] :start_date Only on or after the given date
  # @option opts [Date] :end_date Only on or before the given date
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCompanyFundamentals]
  describe 'filter_company_fundamentals test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_companies
  # Get All Companies
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCompanies]
  describe 'get_all_companies test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_company_news
  # Get All Company News
  # Returns all news for all companies
  # @param [Hash] opts the optional parameters
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseNews]
  describe 'get_all_company_news test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_company
  # Get a Company by ID
  # 
  # @param identifier A Company identifier (Ticker, CIK, LEI, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @return [Company]
  describe 'get_company test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_company_data_point_number
  # Get Company Data Point (Number)
  # Returns a numeric value for the given &#x60;tag&#x60; for the Company with the given &#x60;identifier&#x60;
  # @param identifier A Company identifier (Ticker, CIK, LEI, Intrinio ID)
  # @param tag An Intrinio data tag
  # @param [Hash] opts the optional parameters
  # @return [Float]
  describe 'get_company_data_point_number test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_company_data_point_text
  # Get Company Data Point (Text)
  # Returns a text value for the given &#x60;tag&#x60; for the Company with the given &#x60;identifier&#x60;
  # @param identifier A Company identifier (Ticker, CIK, LEI, Intrinio ID)
  # @param tag An Intrinio data tag
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_company_data_point_text test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_company_filings
  # Get Filings for a Company
  # Returns a complete list of SEC filings for the Company with the given &#x60;identifier&#x60;
  # @param identifier A Company identifier (Ticker, CIK, LEI, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCompanyFilings]
  describe 'get_company_filings test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_company_fundamentals
  # Get All Fundamentals for a Company
  # Returns all Fundamentals for the Company with the given &#x60;identifier&#x60;
  # @param identifier A Company identifier (Ticker, CIK, LEI, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCompanyFundamentals]
  describe 'get_company_fundamentals test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_company_historical_data
  # Get Company Historical Data
  # Returns historical values for the given &#x60;tag&#x60; and the Company with the given &#x60;identifier&#x60;
  # @param identifier A Company identifier (Ticker, CIK, LEI, Intrinio ID)
  # @param tag Item
  # @param [Hash] opts the optional parameters
  # @option opts [String] :type Filter by type, when applicable
  # @option opts [Date] :start_date Get historical data on or after this date
  # @option opts [Date] :end_date Get historical data on or before this date
  # @option opts [String] :sort_order Sort by date &#x60;asc&#x60; or &#x60;desc&#x60;
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCompanyHistoricalData]
  describe 'get_company_historical_data test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_company_news
  # Get News for a Company
  # Returns news for the Company with the given &#x60;identifier&#x60;
  # @param identifier A Company identifier (Ticker, CIK, LEI, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCompanyNews]
  describe 'get_company_news test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_company_securities
  # Get Securities by Company
  # Return Securities for the Company with &#x60;identifier&#x60;
  # @param identifier A Company identifier (Ticker, CIK, LEI, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCompanySecurities]
  describe 'get_company_securities test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for lookup_company_fundamental
  # Lookup a Fundamental for a Company
  # Returns the Fundamental for the Company with the given &#x60;identifier&#x60; and with the given parameters
  # @param identifier A Company identifier (Ticker, CIK, LEI, Intrinio ID)
  # @param statement_code The statement code
  # @param fiscal_period The fiscal period
  # @param fiscal_year The fiscal year
  # @param [Hash] opts the optional parameters
  # @return [Fundamental]
  describe 'lookup_company_fundamental test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search_companies
  # Search Companies
  # Searches for Companies matching the text &#x60;query&#x60;
  # @param query Search parameters
  # @param [Hash] opts the optional parameters
  # @return [ApiResponseCompanies]
  describe 'search_companies test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
