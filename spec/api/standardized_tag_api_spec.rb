=begin
#Intrinio API

#Welcome to the Intrinio API! Through our Marketplace, we offer a wide selection of financial data feeds sourced by our own proprietary processes as well as from many data vendors. The primary application of the Intrinio API is for use in third-party applications and integrations or for end-users utilizing the Excel add-in and Google Sheets add-on. The Intrinio API uses HTTPS verbs and a RESTful endpoint structure, which makes it easy to request data from Intrinio. Responses are delivered in JSON format. If you need additional help in using the API, go to our home page (https://intrinio.com) and click on the chat icon in the lower right corner.

OpenAPI spec version: 2.0.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Intrinio::StandardizedTagApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'StandardizedTagApi' do
  before do
    # run before each test
    @instance = Intrinio::StandardizedTagApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of StandardizedTagApi' do
    it 'should create an instance of StandardizedTagApi' do
      expect(@instance).to be_instance_of(Intrinio::StandardizedTagApi)
    end
  end

  # unit tests for filter_standardized_tags
  # Filter Standardized Tags
  # Returns Standarized Tags that match the given filters
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tag Tag
  # @option opts [String] :type Type
  # @option opts [String] :parent ID of tag parent
  # @option opts [String] :statement_code Statement Code
  # @option opts [String] :fs_template Template
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [Array<StandardizedTag>]
  describe 'filter_standardized_tags test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_standardized_tags
  # Get All Standardized Tags
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [Array<StandardizedTag>]
  describe 'get_all_standardized_tags test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_standardized_tag_by_id
  # Get a Standardized Tag by ID
  # 
  # @param tag_id The Intrinio ID for the tag
  # @param [Hash] opts the optional parameters
  # @return [StandardizedTag]
  describe 'get_standardized_tag_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_standardized_tag_data_point_number
  # Get Data Point (Number) for The Standardized Tag
  # Returns a numeric data point for the Standardized Tag and entity &#x60;identifier&#x60;
  # @param id The Intrinio Standardized Tag ID or its tag
  # @param identifier An identifier for an entity such as a Company, Security, Index, etc (Ticker, FIGI, ISIN, CUSIP, CIK, LEI, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @return [DataPointNumber]
  describe 'get_standardized_tag_data_point_number test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_standardized_tag_data_point_text
  # Get Data Point (Text) for the Standardized Tag
  # Returns a text data point for the Standardized Tag and entity &#x60;identifier&#x60;
  # @param id The Intrinio Standardized Tag ID or its tag
  # @param identifier An identifier for an entity such as a Company, Security, Index, etc (Ticker, FIGI, ISIN, CUSIP, CIK, LEI, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @return [DataPointText]
  describe 'get_standardized_tag_data_point_text test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_standardized_tag_historical_data
  # Get Historical Data for the Standardized Tag
  # Returns historical values for the Standardized Tag and the Entity represented by the given &#x60;identifier&#x60;
  # @param id The Intrinio Standardized Tag ID or its tag
  # @param identifier An identifier for an entity such as a Company, Security, Index, etc (Ticker, FIGI, ISIN, CUSIP, CIK, LEI, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :type Filter by type, when applicable
  # @option opts [Date] :start_date Get historical data on or after this date
  # @option opts [Date] :end_date Get historical date on or before this date
  # @option opts [String] :sort_order Sort by date &#x60;asc&#x60; or &#x60;desc&#x60;
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [Array<HistoricalData>]
  describe 'get_standardized_tag_historical_data test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search_standardized_tags
  # Search Standardized Tags
  # Searches for Standardized Tags matching the text &#x60;query&#x60;
  # @param query 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [Array<StandardizedTag>]
  describe 'search_standardized_tags test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
