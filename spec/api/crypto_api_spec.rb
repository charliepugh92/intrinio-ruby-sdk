=begin
#Intrinio API

#Welcome to the Intrinio API! Through our Financial Data Marketplace, we offer a wide selection of financial data feed APIs sourced by our own proprietary processes as well as from many data vendors. For a complete API request / response reference please view the [Intrinio API documentation](https://intrinio.com/documentation/api_v2). If you need additional help in using the API, please visit the [Intrinio website](https://intrinio.com) and click on the chat icon in the lower right corner.

OpenAPI spec version: 2.6.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Intrinio::CryptoApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CryptoApi' do
  before do
    # run before each test
    @instance = Intrinio::CryptoApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CryptoApi' do
    it 'should create an instance of CryptoApi' do
      expect(@instance).to be_instance_of(Intrinio::CryptoApi)
    end
  end

  # unit tests for get_crypto_book_asks
  # Crypto Book Asks
  # Returns the entire ask order book for a given Crypto Currency Pair and Crypto Exchange.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return the order book asks for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return the order book asks for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return the order book asks for the given Crypto Currency.
  # @return [ApiResponseCryptoBookAsks]
  describe 'get_crypto_book_asks test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_book_bids
  # Crypto Book Bids
  # Returns the entire bid order book for a given Crypto Currency Pair and Crypto Exchange.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return the order book bids for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return the order book bids for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return the order book bids for the given Crypto Currency.
  # @return [ApiResponseCryptoBookBids]
  describe 'get_crypto_book_bids test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_book_summary
  # Crypto Book Summary
  # Returns the order book summary (bid/ask prices and size) for a given Crypto Currency Pair and Crypto Exchange.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :levels The number of prices/levels to return on each side. For example, the max of 50 levels will return up to 50 bid prices and 50 ask prices.
  # @option opts [String] :pair Return the order book summary for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return the order book summary for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return the order book summary for the given Crypto Currency.
  # @return [ApiResponseCryptoBook]
  describe 'get_crypto_book_summary test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_currencies
  # Crypto Currencies
  # Returns a list of Crypto Currencies for which prices are available.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :exchange Returns Crypto Currencies traded on the given Crypto Exchange.
  # @return [ApiResponseCryptoCurrencies]
  describe 'get_crypto_currencies test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_exchanges
  # Crypto Exchanges
  # Returns a list of Crypto Exchanges for which prices are available.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Filter exchanges based on whether or not prices are available on the exchange for the crypto currency pair.
  # @return [ApiResponseCryptoExchanges]
  describe 'get_crypto_exchanges test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_pairs
  # Crypto Pairs
  # Returns a list of Crypto Currency Pairs for which data is available.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :exchange Return pairs traded on the given Crypto Exchange.
  # @option opts [String] :currency Return pairs with one side being the given Crypto Currency.
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoPairs]
  describe 'get_crypto_pairs test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_adi
  # Accumulation/Distribution Index
  # Returns the Accumulation/Distribution Index values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoAccumulationDistributionIndex]
  describe 'get_crypto_price_technicals_adi test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_adtv
  # Average Daily Trading Volume
  # Returns the Average Daily Trading Volume values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :period The number of observations, per period, to calculate Average Daily Trading Volume.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoAverageDailyTradingVolume]
  describe 'get_crypto_price_technicals_adtv test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_adx
  # Average Directional Index
  # Returns the Average Directional Index values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :period The number of observations, per period, to calculate Average Directional Index.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoAverageDirectionalIndex]
  describe 'get_crypto_price_technicals_adx test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_ao
  # Awesome Oscillator
  # Returns the Awesome Oscillator values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :short_period The number of observations, per period, to calculate short period Simple Moving Average of the Awesome Oscillator.
  # @option opts [Integer] :long_period The number of observations, per period, to calculate long period Simple Moving Average of the Awesome Oscillator.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoAwesomeOscillator]
  describe 'get_crypto_price_technicals_ao test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_atr
  # Average True Range
  # Returns the Average True Range values of Crypto Currency Prices for Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :period The number of observations, per period, to calculate Average True Range.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoAverageTrueRange]
  describe 'get_crypto_price_technicals_atr test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_bb
  # Bollinger Bands
  # Returns the Bollinger Bands values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :period The number of observations, per period, to calculate Bollinger Bands.
  # @option opts [Float] :standard_deviations The number of standard deviations to calculate the upper and lower bands of the Bollinger Bands.
  # @option opts [String] :price_key The Crypto Currency Price field to use when calculating Bollinger Bands.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoBollingerBands]
  describe 'get_crypto_price_technicals_bb test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_cci
  # Commodity Channel Index
  # Returns the Commodity Channel Index values of Crypto Currency Prices for Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :period The number of observations, per period, to calculate Commodity Channel Index.
  # @option opts [Float] :constant The number of observations, per period, to calculate Commodity Channel Index.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoCommodityChannelIndex]
  describe 'get_crypto_price_technicals_cci test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_cmf
  # Chaikin Money Flow
  # Returns the Chaikin Money Flow values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :period The number of observations, per period, to calculate Chaikin Money Flow.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoChaikinMoneyFlow]
  describe 'get_crypto_price_technicals_cmf test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_dc
  # Donchian Channel
  # Returns the Donchian Channel values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :period The number of observations, per period, to calculate Donchian Channel.
  # @option opts [String] :price_key The Crypto Currency Price field to use when calculating Donchian Channel.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoDonchianChannel]
  describe 'get_crypto_price_technicals_dc test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_dpo
  # Detrended Price Oscillator
  # Returns the Detrended Price Oscillator values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :period The number of observations, per period, to calculate Detrended Price Oscillator.
  # @option opts [String] :price_key The Crypto Currency Price field to use when calculating Detrended Price Oscillator.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoDetrendedPriceOscillator]
  describe 'get_crypto_price_technicals_dpo test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_eom
  # Ease of Movement
  # Returns the Ease of Movement values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :period The number of observations, per period, to calculate Ease of Movement.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoEaseOfMovement]
  describe 'get_crypto_price_technicals_eom test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_fi
  # Force Index
  # Returns the Force Index values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoForceIndex]
  describe 'get_crypto_price_technicals_fi test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_ichimoku
  # Ichimoku Kinko Hyo
  # Returns the Ichimoku Kinko Hyo values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :low_period The number of observations, per period, to calculate Tenkan Sen (Conversion Line) of Ichimoku Kinko Hyo.
  # @option opts [Integer] :medium_period The number of observations, per period, to calculate Kijun Sen (Base Line), Senkou Span A (Leading Span A), and Chikou Span (Lagging Span) of Ichimoku Kinko Hyo.
  # @option opts [Integer] :high_period The number of observations, per period, to calculate Senkou Span B (Leading Span B) of Ichimoku Kinko Hyo.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoIchimokuKinkoHyo]
  describe 'get_crypto_price_technicals_ichimoku test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_kc
  # Keltner Channel
  # Returns the Keltner Channel values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :period The number of observations, per period, to calculate Kelter Channel.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoKeltnerChannel]
  describe 'get_crypto_price_technicals_kc test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_kst
  # Know Sure Thing
  # Returns the Know Sure Thing values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :roc1 The number of observations, per period, to calculate the rate-of-change for RCMA1.
  # @option opts [Integer] :roc2 The number of observations, per period, to calculate the rate-of-change for RCMA2.
  # @option opts [Integer] :roc3 The number of observations, per period, to calculate the rate-of-change for RCMA3.
  # @option opts [Integer] :roc4 The number of observations, per period, to calculate the rate-of-change for RCMA4.
  # @option opts [Integer] :sma1 The number of observations, per period, to calculate the Simple Moving Average of the rate-of-change for RCMA1.
  # @option opts [Integer] :sma2 The number of observations, per period, to calculate the Simple Moving Average of the rate-of-change for RCMA2.
  # @option opts [Integer] :sma3 The number of observations, per period, to calculate the Simple Moving Average of the rate-of-change for RCMA3.
  # @option opts [Integer] :sma4 The number of observations, per period, to calculate the Simple Moving Average of the rate-of-change for RCMA4.
  # @option opts [String] :price_key The Crypto Currency Price field to use when calculating Know Sure Thing.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoKnowSureThing]
  describe 'get_crypto_price_technicals_kst test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_macd
  # Moving Average Convergence Divergence
  # Returns the Moving Average Convergence Divergence values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :fast_period The number of observations, per period, to calculate the fast moving Exponential Moving Average for Moving Average Convergence Divergence.
  # @option opts [Integer] :slow_period The number of observations, per period, to calculate the slow moving Exponential Moving Average for Moving Average Convergence Divergence.
  # @option opts [Integer] :signal_period The number of observations, per period, to calculate the signal line for Moving Average Convergence Divergence.
  # @option opts [String] :price_key The Crypto Currency Price field to use when calculating Moving Average Convergence Divergence.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoMovingAverageConvergenceDivergence]
  describe 'get_crypto_price_technicals_macd test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_mfi
  # Money Flow Index
  # Returns the Money Flow Index values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :period The number of observations, per period, to calculate Money Flow Index.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoMoneyFlowIndex]
  describe 'get_crypto_price_technicals_mfi test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_mi
  # Mass Index
  # Returns the Mass Index values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :ema_period The number of observations, per period, to calculate the single Exponential Moving Average and the Double Exponential Moving Average for Mass Index.
  # @option opts [Integer] :sum_period The number of observations, per period, to calculate the sum of the Exponetinal Moving Average Ratios for Mass Index.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoMassIndex]
  describe 'get_crypto_price_technicals_mi test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_nvi
  # Negative Volume Index
  # Returns the Negative Volume Index values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoNegativeVolumeIndex]
  describe 'get_crypto_price_technicals_nvi test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_obv
  # On-balance Volume
  # Returns the On-balance Volume values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoOnBalanceVolume]
  describe 'get_crypto_price_technicals_obv test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_obv_mean
  # On-balance Volume Mean
  # Returns the On-balance Volume Mean values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :period The number of observations, per period, to calculate On-balance Volume Mean.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoOnBalanceVolumeMean]
  describe 'get_crypto_price_technicals_obv_mean test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_rsi
  # Relative Strength Index
  # Returns the Relative Strength Index values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :period The number of observations, per period, to calculate Relative Strength Index.
  # @option opts [String] :price_key The Crypto Currency Price field to use when calculating Relative Strength Index.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoRelativeStrengthIndex]
  describe 'get_crypto_price_technicals_rsi test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_sma
  # Simple Moving Average
  # Returns the Simple Moving Average values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :period The number of observations, per period, to calculate Simple Moving Average.
  # @option opts [String] :price_key The Crypto Currency Price field to use when calculating Simple Moving Average.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoSimpleMovingAverage]
  describe 'get_crypto_price_technicals_sma test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_sr
  # Stochastic Oscillator
  # Returns the Stochastic Oscillator values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :period The number of observations, per period, to calculate %K of Stochastic Oscillator.
  # @option opts [Integer] :signal_period The number of observations, per period, to calculate the %D (the Simple Moving Average of %K) as a signal line for Stochastic Oscillator.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoStochasticOscillator]
  describe 'get_crypto_price_technicals_sr test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_trix
  # Triple Exponential Average
  # Returns the Simple Moving Average values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :period The number of observations, per period, to calculate Exponential Moving Average for Triple Exponential Average.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoTripleExponentialAverage]
  describe 'get_crypto_price_technicals_trix test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_tsi
  # True Strength Index
  # Returns the True Strength Index values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :low_period The number of observations, per period, to calculate low period Exponential Moving Average for smoothing in True Strength Index.
  # @option opts [Integer] :high_period The number of observations, per period, to calculate high period Exponential Moving Average for smoothing in True Strength Index.
  # @option opts [String] :price_key The Crypto Currency Price field to use when calculating True Strength Index.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoTrueStrengthIndex]
  describe 'get_crypto_price_technicals_tsi test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_uo
  # Ultimate Oscillator
  # Returns the Ultimate Oscillator values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :short_period The number of observations, per period, to calculate the short period for Ultimate Oscillator.
  # @option opts [Integer] :medium_period The number of observations, per period, to calculate the medium period for Ultimate Oscillator.
  # @option opts [Integer] :long_period The number of observations, per period, to calculate the long period for Ultimate Oscillator.
  # @option opts [Float] :short_weight The weight of short Buying Pressure average for Ultimate Oscillator.
  # @option opts [Float] :medium_weight The weight of medium Buying Pressure average for Ultimate Oscillator.
  # @option opts [Float] :long_weight The weight of long Buying Pressure average for Ultimate Oscillator.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoUltimateOscillator]
  describe 'get_crypto_price_technicals_uo test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_vi
  # Vortex Indicator
  # Returns the Vortex Indicator values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :period The number of observations, per period, to calculate Vortex Indicator.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoVortexIndicator]
  describe 'get_crypto_price_technicals_vi test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_vpt
  # Volume-price Trend
  # Returns the Volume-price Trend values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoVolumePriceTrend]
  describe 'get_crypto_price_technicals_vpt test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_vwap
  # Volume Weighted Average Price
  # Returns the Volume Weighted Average Price values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoVolumeWeightedAveragePrice]
  describe 'get_crypto_price_technicals_vwap test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_price_technicals_wr
  # Williams %R
  # Returns the Williams %R values of Crypto Currency Prices for a Crypto Currency Pair
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return technicals for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return technicals for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return technicals for the given Crypto Currency.
  # @option opts [Integer] :period The number of observations, per period, to look-back when calculating Williams %R.
  # @option opts [String] :timeframe The time interval for the prices when calculating technicals.
  # @option opts [String] :timezone Return technical date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return technicals on or after this date.
  # @option opts [String] :start_time Return technicals at or after this time (24-hour).
  # @option opts [Date] :end_date Return technicals on or before this date.
  # @option opts [String] :end_time Return technicals at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoWilliamsR]
  describe 'get_crypto_price_technicals_wr test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_prices
  # Crypto Prices
  # Returns a list of available Crypto Currency Prices.
  # @param timeframe The time interval for the prices.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return prices for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return prices for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return prices for the given Crypto Currency.
  # @option opts [String] :timezone Return price date/times in this timezone, also interpret start/end date/time parameters in this timezone.
  # @option opts [Date] :start_date Return Crypto Prices on or after this date.
  # @option opts [String] :start_time Return Crypto Prices at or after this time (24-hour).
  # @option opts [Date] :end_date Return Crypto Prices on or before this date.
  # @option opts [String] :end_time Return Crypto Prices at or before this time (24-hour).
  # @option opts [Integer] :page_size An integer greater than or equal to 1 for specifying the number of results on each page.
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseCryptoPrices]
  describe 'get_crypto_prices test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_snapshot
  # Crypto Snapshot
  # Returns a market snapshot over that last 24 hours for the given currency pair and exchange.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pair Return the snapshot for the given Crypto Currency Pair.
  # @option opts [String] :exchange Return the snapshot for a Crypto Currency on the given Crypto Exchange.
  # @option opts [String] :currency Return the snapshot for the given Crypto Currency.
  # @return [ApiResponseCryptoSnapshot]
  describe 'get_crypto_snapshot test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_crypto_stats
  # Crypto Stats
  # Returns available stats on Crypto Currencies.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :exchange Returns stats for Crypto Currencies that trade on the specified Crypto Exchange.
  # @option opts [String] :currency Returns stats for the specified Crypto Currency.
  # @return [ApiResponseCryptoStats]
  describe 'get_crypto_stats test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
